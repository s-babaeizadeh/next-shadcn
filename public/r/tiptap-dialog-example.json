{
  "name": "tiptap-dialog-example",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/tiptap-dialog-example.tsx",
      "type": "registry:example",
      "content": "import {\n\tCard,\n\tCardContent,\n\tCardDescription,\n\tCardHeader,\n\tCardTitle,\n} from \"@/components/ui/card\";\nimport {\n\tDialog,\n\tDialogClose,\n\tDialogContent,\n\tDialogDescription,\n\tDialogFooter,\n\tDialogHeader,\n\tDialogTitle,\n\tDialogTrigger,\n} from \"@/components/ui/dialog\";\nimport type React from \"react\";\nimport { useCallback, useState } from \"react\";\n\nimport Bold from \"@tiptap/extension-bold\";\nimport Code from \"@tiptap/extension-code\";\nimport Document from \"@tiptap/extension-document\";\nimport History from \"@tiptap/extension-history\";\nimport Italic from \"@tiptap/extension-italic\";\nimport Link from \"@tiptap/extension-link\";\nimport Paragraph from \"@tiptap/extension-paragraph\";\nimport Strike from \"@tiptap/extension-strike\";\nimport Text from \"@tiptap/extension-text\";\nimport Underline from \"@tiptap/extension-underline\";\n// => Tiptap packages\nimport {\n\tBubbleMenu,\n\ttype Editor,\n\tEditorContent,\n\tuseEditor,\n} from \"@tiptap/react\";\nimport classNames from \"classnames\";\n\nimport { Button } from \"@/components/ui/button\";\n\n// Custom\nimport content from \"@/components/TextContent\";\n\nimport { Input } from \"@/components/ui/input\";\nimport {\n\tBoldIcon,\n\tCode2,\n\tItalicIcon,\n\tLink2,\n\tRotateCcw,\n\tRotateCw,\n\tStrikethrough,\n\tUnderlineIcon,\n} from \"lucide-react\";\n\nimport { useCustomComponentStore } from \"@/stores/useCustomComponentStore\";\n\nconst TiptapDialog: React.FC = () => {\n\tconst {\n\t\tsectionClassName,\n\t\tcardClassName,\n\t\ttitleClassName,\n\t\tdescriptionClassName,\n\t\tbuttonColor,\n\t\tcardTitle,\n\t\tcardDescription,\n\t\tdialogTitle,\n\t\tdialogDescription,\n\t\tcloseButton,\n\t\topenDialog,\n\t} = useCustomComponentStore();\n\n\tconst editor = useEditor({\n\t\textensions: [\n\t\t\tDocument,\n\t\t\tHistory,\n\t\t\tParagraph,\n\t\t\tText,\n\t\t\tLink.configure({\n\t\t\t\topenOnClick: false,\n\t\t\t}),\n\t\t\tBold,\n\t\t\tUnderline,\n\t\t\tItalic,\n\t\t\tStrike,\n\t\t\tCode,\n\t\t],\n\t\tcontent,\n\t}) as Editor;\n\n\tconst [dialogOpen, setDialogOpen] = useState(false);\n\tconst [url, setUrl] = useState<string>(\"\");\n\n\tconst openDialogClick = useCallback(() => {\n\t\tsetUrl(editor.getAttributes(\"link\").href);\n\t\tsetDialogOpen(true);\n\t}, [editor]);\n\n\tconst closeDialog = useCallback(() => {\n\t\tsetDialogOpen(false);\n\t\tsetUrl(\"\");\n\t}, []);\n\n\tconst saveLink = useCallback(() => {\n\t\tif (url) {\n\t\t\teditor\n\t\t\t\t.chain()\n\t\t\t\t.focus()\n\t\t\t\t.extendMarkRange(\"link\")\n\t\t\t\t.setLink({ href: url, target: \"_blank\" })\n\t\t\t\t.run();\n\t\t} else {\n\t\t\teditor.chain().focus().extendMarkRange(\"link\").unsetLink().run();\n\t\t}\n\t\tcloseDialog();\n\t}, [editor, url, closeDialog]);\n\n\tconst removeLink = useCallback(() => {\n\t\teditor.chain().focus().extendMarkRange(\"link\").unsetLink().run();\n\t\tcloseDialog();\n\t}, [editor, closeDialog]);\n\n\tconst toggleBold = useCallback(() => {\n\t\teditor.chain().focus().toggleBold().run();\n\t}, [editor]);\n\n\tconst toggleUnderline = useCallback(() => {\n\t\teditor.chain().focus().toggleUnderline().run();\n\t}, [editor]);\n\n\tconst toggleItalic = useCallback(() => {\n\t\teditor.chain().focus().toggleItalic().run();\n\t}, [editor]);\n\n\tconst toggleStrike = useCallback(() => {\n\t\teditor.chain().focus().toggleStrike().run();\n\t}, [editor]);\n\n\tconst toggleCode = useCallback(() => {\n\t\teditor.chain().focus().toggleCode().run();\n\t}, [editor]);\n\n\tif (!editor) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<section\n\t\t\tclassName={`${sectionClassName} rounded-lg border border-gray-300`}\n\t\t>\n\t\t\t<Card className={cardClassName}>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardTitle className={titleClassName}>{cardTitle}</CardTitle>\n\t\t\t\t\t<CardDescription className={descriptionClassName}>\n\t\t\t\t\t\t{cardDescription}\n\t\t\t\t\t</CardDescription>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Dialog>\n\t\t\t\t\t\t<DialogTrigger asChild>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\t\t\t\tclassName=\"flex justify-center mx-auto\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: buttonColor }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{openDialog}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogTrigger>\n\t\t\t\t\t\t<DialogContent className=\"sm:max-w-[400px]\">\n\t\t\t\t\t\t\t<DialogHeader>\n\t\t\t\t\t\t\t\t<DialogTitle>{dialogTitle}</DialogTitle>\n\t\t\t\t\t\t\t\t<DialogDescription>{dialogDescription}</DialogDescription>\n\t\t\t\t\t\t\t</DialogHeader>\n\t\t\t\t\t\t\t<DialogFooter className=\"flex justify-center items-center mx-auto flex-col gap-3\">\n\t\t\t\t\t\t\t\t{/* simple edit */}\n\t\t\t\t\t\t\t\t<div className=\"editor\">\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => editor.chain().focus().undo().run()}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!editor.can().undo()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<RotateCcw />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => editor.chain().focus().redo().run()}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!editor.can().redo()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<RotateCw />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"link\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={openDialogClick}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Link2 />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"bold\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleBold}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<BoldIcon />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"underline\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleUnderline}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<UnderlineIcon />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"italic\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleItalic}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ItalicIcon />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"strike\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleStrike}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Strikethrough />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\": editor.isActive(\"code\"),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleCode}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Code2 />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<BubbleMenu\n\t\t\t\t\t\t\t\t\t\tclassName=\"bubble-menu-light ml-10\"\n\t\t\t\t\t\t\t\t\t\ttippyOptions={{ duration: 150 }}\n\t\t\t\t\t\t\t\t\t\teditor={editor}\n\t\t\t\t\t\t\t\t\t\tshouldShow={({\n\t\t\t\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\t\t\t\tview,\n\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\toldState,\n\t\t\t\t\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\t\t\treturn from === to && editor.isActive(\"link\");\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={openDialogClick} className=\"ml-20\">\n\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"destructive\" onClick={removeLink}>\n\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</BubbleMenu>\n\t\t\t\t\t\t\t\t\t<EditorContent editor={editor} />\n\t\t\t\t\t\t\t\t\t{/* Shadcn Dialog */}\n\t\t\t\t\t\t\t\t\t<Dialog open={dialogOpen} onOpenChange={closeDialog}>\n\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle>Edit Link</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={url}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setUrl(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter URL\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-full h-10 border-none\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-end items-center gap-2 p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={saveLink}>Save</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"destructive\" onClick={removeLink}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline\" onClick={closeDialog}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<DialogClose asChild>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: buttonColor }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{closeButton}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</DialogClose>\n\t\t\t\t\t\t\t</DialogFooter>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t</Dialog>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default TiptapDialog;\n",
      "target": "components/tiptap-dialog-example.tsx"
    }
  ]
}