{
	"name": "combobox-dialog-example",
	"type": "registry:example",
	"files": [
		{
			"path": "examples/combobox-dialog-example.tsx",
			"type": "registry:example",
			"content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useCustomComponentStore } from \"@/stores/useCustomComponentStore\";\n\nconst frameworks = [\n  { value: \"next.js\", label: \"Next.js\" },\n  { value: \"sveltekit\", label: \"SvelteKit\" },\n  { value: \"nuxt.js\", label: \"Nuxt.js\" },\n  { value: \"remix\", label: \"Remix\" },\n  { value: \"astro\", label: \"Astro\" },\n];\n\nconst ComboboxDialog : React.FC = () => {\n  const {\n    sectionClassName,\n    cardClassName,\n    titleClassName,\n    descriptionClassName,\n    cardTitle,\n    cardDescription,    \n  } = useCustomComponentStore();\n\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"\");\n\n  return (\n    <section className={`${sectionClassName} rounded-lg border border-gray-300`}>\n      <Card className={cardClassName}>\n        <CardHeader>\n          <CardTitle className={titleClassName}>{cardTitle}</CardTitle>\n          <CardDescription className={descriptionClassName}>\n            {cardDescription}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Popover open={open} onOpenChange={setOpen}>\n            <PopoverTrigger asChild>\n              <Button\n                variant=\"default\"\n                role=\"combobox\"\n                className=\"flex justify-center mx-auto\"\n                aria-expanded={open}\n              >\n                {value\n                  ? frameworks.find((framework) => framework.value === value)?.label\n                  : \"Select framework...\"}\n                <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-[200px] p-0\">\n              <Command>\n                <CommandInput placeholder=\"Search framework...\" />\n                <CommandList>\n                  <CommandEmpty>No framework found.</CommandEmpty>\n                  <CommandGroup>\n                    {frameworks.map((framework) => (\n                      <CommandItem\n                        key={framework.value}\n                        value={framework.value}\n                        onSelect={(currentValue) => {\n                          setValue(currentValue === value ? \"\" : currentValue);\n                          setOpen(false);\n                        }}\n                      >\n                        <Check\n                          className={cn(\n                            \"mr-2 h-4 w-4\",\n                            value === framework.value ? \"opacity-100\" : \"opacity-0\"\n                          )}\n                        />\n                        {framework.label}\n                      </CommandItem>\n                    ))}\n                  </CommandGroup>\n                </CommandList>\n              </Command>\n            </PopoverContent>\n          </Popover>\n        </CardContent>\n      </Card>\n    </section>\n  );\n};\n\nexport default ComboboxDialog;\n",
			"target": "components/combobox-dialog-example.tsx"
		}
	]
}
