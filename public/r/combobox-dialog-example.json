{
  "name": "combobox-dialog-example",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/combobox-dialog-example.tsx",
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tCard,\n\tCardContent,\n\tCardDescription,\n\tCardHeader,\n\tCardTitle,\n} from \"@/components/ui/card\";\nimport {\n\tCommand,\n\tCommandEmpty,\n\tCommandGroup,\n\tCommandInput,\n\tCommandItem,\n\tCommandList,\n} from \"@/components/ui/command\";\nimport {\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { useCustomComponentStore } from \"@/stores/useCustomComponentStore\";\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport * as React from \"react\";\n\nconst frameworks = [\n\t{ value: \"next.js\", label: \"Next.js\" },\n\t{ value: \"sveltekit\", label: \"SvelteKit\" },\n\t{ value: \"nuxt.js\", label: \"Nuxt.js\" },\n\t{ value: \"remix\", label: \"Remix\" },\n\t{ value: \"astro\", label: \"Astro\" },\n];\n\nconst ComboboxDialog: React.FC = () => {\n\tconst {\n\t\tsectionClassName,\n\t\tcardClassName,\n\t\ttitleClassName,\n\t\tdescriptionClassName,\n\t\tcardTitle,\n\t\tcardDescription,\n\t} = useCustomComponentStore();\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [value, setValue] = React.useState(\"\");\n\n\treturn (\n\t\t<section\n\t\t\tclassName={`${sectionClassName} rounded-lg border border-gray-300`}\n\t\t>\n\t\t\t<Card className={cardClassName}>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardTitle className={titleClassName}>{cardTitle}</CardTitle>\n\t\t\t\t\t<CardDescription className={descriptionClassName}>\n\t\t\t\t\t\t{cardDescription}\n\t\t\t\t\t</CardDescription>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Popover open={open} onOpenChange={setOpen}>\n\t\t\t\t\t\t<PopoverTrigger asChild>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\tclassName=\"flex justify-center mx-auto\"\n\t\t\t\t\t\t\t\taria-expanded={open}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{value\n\t\t\t\t\t\t\t\t\t? frameworks.find((framework) => framework.value === value)\n\t\t\t\t\t\t\t\t\t\t\t?.label\n\t\t\t\t\t\t\t\t\t: \"Select framework...\"}\n\t\t\t\t\t\t\t\t<ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t<PopoverContent className=\"w-[200px] p-0\">\n\t\t\t\t\t\t\t<Command>\n\t\t\t\t\t\t\t\t<CommandInput placeholder=\"Search framework...\" />\n\t\t\t\t\t\t\t\t<CommandList>\n\t\t\t\t\t\t\t\t\t<CommandEmpty>No framework found.</CommandEmpty>\n\t\t\t\t\t\t\t\t\t<CommandGroup>\n\t\t\t\t\t\t\t\t\t\t{frameworks.map((framework) => (\n\t\t\t\t\t\t\t\t\t\t\t<CommandItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={framework.value}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={framework.value}\n\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(currentValue) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetValue(currentValue === value ? \"\" : currentValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Check\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"mr-2 h-4 w-4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue === framework.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"opacity-100\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"opacity-0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{framework.label}\n\t\t\t\t\t\t\t\t\t\t\t</CommandItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</CommandGroup>\n\t\t\t\t\t\t\t\t</CommandList>\n\t\t\t\t\t\t\t</Command>\n\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t</Popover>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default ComboboxDialog;\n",
      "target": "components/combobox-dialog-example.tsx"
    }
  ]
}