{
  "name": "calendar-dialog-example",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/calendar-dialog-example.tsx",
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { CalendarIcon } from \"@radix-ui/react-icons\";\nimport { format } from \"date-fns\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n\tCard,\n\tCardContent,\n\tCardDescription,\n\tCardHeader,\n\tCardTitle,\n} from \"@/components/ui/card\";\nimport {\n\tForm,\n\tFormControl,\n\tFormDescription,\n\tFormField,\n\tFormItem,\n\tFormLabel,\n\tFormMessage,\n} from \"@/components/ui/form\";\nimport {\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { useCustomComponentStore } from \"@/stores/useCustomComponentStore\";\n\nconst FormSchema = z.object({\n\tdob: z.date({\n\t\trequired_error: \"A date of birth is required.\",\n\t}),\n});\n\nconst CalendarDialog: React.FC = () => {\n\tconst {\n\t\tsectionClassName,\n\t\tcardClassName,\n\t\ttitleClassName,\n\t\tdescriptionClassName,\n\t\tcardTitle,\n\t\tcardDescription,\n\t\tcalenderDescription,\n\t\tcalenderTitle,\n\t} = useCustomComponentStore();\n\n\tconst form = useForm<z.infer<typeof FormSchema>>({\n\t\tresolver: zodResolver(FormSchema),\n\t});\n\treturn (\n\t\t<section\n\t\t\tclassName={`${sectionClassName} rounded-lg border border-gray-300`}\n\t\t>\n\t\t\t<Card className={cardClassName}>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardTitle className={titleClassName}>{cardTitle}</CardTitle>\n\t\t\t\t\t<CardDescription className={descriptionClassName}>\n\t\t\t\t\t\t{cardDescription}\n\t\t\t\t\t</CardDescription>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Form {...form}>\n\t\t\t\t\t\t<form className=\"space-y-8\">\n\t\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\t\tname=\"dob\"\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<FormItem className=\"flex flex-col\">\n\t\t\t\t\t\t\t\t\t\t<FormLabel>{calenderTitle}</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<Popover>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverTrigger asChild>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"default\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"w-[240px] pl-3 text-left font-normal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!field.value && \"text-muted-foreground\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{field.value ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat(field.value, \"PPP\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-white\">Pick a date</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverContent className=\"w-auto p-0\" align=\"start\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode=\"single\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected={field.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={field.onChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={(date) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate > new Date() || date < new Date(\"1900-01-01\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinitialFocus\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t<FormDescription>{calenderDescription}</FormDescription>\n\t\t\t\t\t\t\t\t\t\t<FormMessage />\n\t\t\t\t\t\t\t\t\t</FormItem>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Form>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default CalendarDialog;\n",
      "target": "components/calendar-dialog-example.tsx"
    }
  ]
}