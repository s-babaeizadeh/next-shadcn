{
	"name": "calendar-dialog-example",
	"type": "registry:example",
	"files": [
		{
			"path": "examples/calendar-dialog-example.tsx",
			"type": "registry:example",
			"content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { CalendarIcon } from \"@radix-ui/react-icons\";\nimport { format } from \"date-fns\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useCustomComponentStore } from \"@/stores/useCustomComponentStore\";\n\nconst FormSchema = z.object({\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n});\n\nconst CalendarDialog : React.FC = () => {\n  const {\n    sectionClassName,\n    cardClassName,\n    titleClassName,\n    descriptionClassName,\n    cardTitle,\n    cardDescription,\n    calenderDescription,\n    calenderTitle\n  } = useCustomComponentStore();\n  \n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  });  \n  return (\n    <section className={`${sectionClassName} rounded-lg border border-gray-300`}>\n      <Card className={cardClassName}>\n        <CardHeader>\n          <CardTitle className={titleClassName}>{cardTitle}</CardTitle>\n          <CardDescription className={descriptionClassName}>\n            {cardDescription}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form  className=\"space-y-8\">\n              <FormField\n                control={form.control}\n                name=\"dob\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-col\">\n                    <FormLabel>{calenderTitle}</FormLabel>\n                    <Popover>\n                      <PopoverTrigger asChild>\n                        <FormControl>\n                          <Button\n                            variant={\"default\"}\n                            className={cn(\n                              \"w-[240px] pl-3 text-left font-normal\",\n                              !field.value && \"text-muted-foreground\"\n                            )}\n                          >\n                            {field.value ? (\n                              format(field.value, \"PPP\")\n                            ) : (\n                              <span className=\"text-white\">Pick a date</span>\n                            )}\n                            <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                          </Button>\n                        </FormControl>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                        <Calendar\n                          mode=\"single\"\n                          selected={field.value}\n                          onSelect={field.onChange}\n                          disabled={(date) =>\n                            date > new Date() || date < new Date(\"1900-01-01\")\n                          }\n                          initialFocus\n                        />\n                      </PopoverContent>\n                    </Popover>\n                    <FormDescription>\n                     {calenderDescription}\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </section>\n  );\n};\n\nexport default CalendarDialog;\n",
			"target": "components/calendar-dialog-example.tsx"
		}
	]
}
